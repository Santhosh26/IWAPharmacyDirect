# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Check Out Source Code
    - uses: actions/checkout@v2
      with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      # If this run was triggered by a pull request event, then checkout the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }} 

      # Java is required to run ScanCentral Client, and may be required for your build
      # Java version to use depends on the Java version required to run your build (if any),
      # and the Java version supported by the ScanCentral Client version that you are running
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 11

      ### Set up Fortify ScanCentral Client ###
    - name: Download Fortify ScanCentral Client
      uses: fortify/gha-setup-scancentral-client@v1   
      with:
       version: 23.1.0                                      # On-prem customers should specify a client version that matches their ScanCentral environment
                                                               # FoD customers usually should not specify a version but rather rely on the default version
       client-auth-token: u2a6k3He3ZduHMZGfOi2s0kFtUcdbbXr66aoaw1Yy86s2bOB  # Optional, but required if ScanCentral Controller requires client authentication

      ### Run Fortify ScanCentral Client ###
      # Update BUILD_OPTS based on the ScanCentral Client documentation and your project's included tech stack(s).
      #   ScanCentral Client will download dependencies for maven, gradle and msbuild projects.
      #   For other build tools, add your build commands to the workflow to download necessary dependencies and prepare according to Fortify SCA documentation.
    - name: Perform SAST Scan
      run: scancentral -url https://scsastctrl.dhl.fortifyhosted.com/scancentral-ctrl/ start $BUILD_OPTS -upload -application $APPLICATION -version $VERSION -uptoken 57ffe8ab-7b4d-44c9-85a0-2aa84285fa80
      env:                                            

          APPLICATION: "IWAPharmacyJava-sample"
          VERSION: "dev"
          BUILD_OPTS: "-bt mvn"

      ### Archive ScanCentral Client logs on failure ###
    - name: Save ScanCentral Logs
      uses: actions/upload-artifact@v2                
      if: failure()
      with:
           name: scancentral-logs
           path: ~/.fortify/scancentral/log

